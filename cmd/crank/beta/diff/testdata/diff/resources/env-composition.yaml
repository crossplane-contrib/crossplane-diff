apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xenvresources.diff.example.org
spec:
  compositeTypeRef:
    apiVersion: diff.example.org/v1alpha1
    kind: XEnvResource
  mode: Pipeline
  pipeline:
    - step: environmentConfigs
      functionRef:
        name: function-environment-configs
      input:
        apiVersion: environmentconfigs.fn.crossplane.io/v1beta1
        kind: Input
        spec:
          environmentConfigs:
            - type: Reference
              ref:
                name: test-env-config
    - step: generate-resources
      functionRef:
        name: function-go-templating
      input:
        apiVersion: template.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            {{ $envConfig := index .context "apiextensions.crossplane.io/environment" }}
            apiVersion: nop.example.org/v1alpha1
            kind: XDownstreamEnvResource
            metadata:
              name: {{ .observed.composite.resource.metadata.name }}
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: env-resource
            spec:
              forProvider:
                configData: {{ .observed.composite.resource.spec.configKey }}
                region: {{ $envConfig.region }}
                environment: {{ $envConfig.environment }}
                serviceLevel: {{ $envConfig.serviceLevel }}
    - step: automatically-detect-ready-composed-resources
      functionRef:
        name: function-auto-ready