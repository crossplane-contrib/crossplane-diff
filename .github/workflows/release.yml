name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_run:
    workflows: ["Tag"]
    types:
      - completed

env:
  # Common versions
  EARTHLY_VERSION: '0.8.16'

  # Force Earthly to use color output
  FORCE_COLOR: "1"

jobs:
  release:
    runs-on: ubuntu-24.04
    # Only run if triggered by tag push OR if tag workflow succeeded
    if: github.event_name == 'push' || github.event.workflow_run.conclusion == 'success'
    permissions:
      contents: write  # Required for creating releases

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Setup Earthly
        uses: earthly/actions-setup@43211c7a0eae5344d6d79fb4aaf209c8f8866203 # v1.0.13
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ env.EARTHLY_VERSION }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Version from Tag
        id: version
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            # Direct tag push - use GITHUB_REF
            VERSION=${GITHUB_REF#refs/tags/}
          else
            # Workflow run trigger - find the most recent tag
            VERSION=$(git describe --tags --abbrev=0)
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Build Release Artifacts
        run: |
          earthly --strict --remote-cache ghcr.io/crossplane-contrib/crossplane-diff/earthly-cache:release +multiplatform-build \
            --CROSSPLANE_VERSION=${{ steps.version.outputs.VERSION }}

      - name: Prepare Release Artifacts
        run: |
          mkdir -p _output/release

          # Copy and rename all artifacts with architecture suffix
          for dir in _output/{bin,bundle}/*/; do
            arch=$(basename "$dir")
            for file in "$dir"*; do
              if [ -f "$file" ]; then
                filename=$(basename "$file")

                # Split filename at first dot to get basename and extension
                if [[ "$filename" == *.* ]]; then
                  basename="${filename%%.*}"
                  extension="${filename#*.}"
                  new_name="${basename}_${arch}.${extension}"
                else
                  new_name="${filename}_${arch}"
                fi

                cp "$file" "_output/release/$new_name"
              fi
            done
          done

          # List what we're about to upload
          echo "Release artifacts:"
          ls -la _output/release/

      - name: Create Release
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836 # v2.3.3
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          files: _output/release/*
          draft: false
          prerelease: ${{ contains(steps.version.outputs.VERSION, 'rc') || contains(steps.version.outputs.VERSION, 'beta') || contains(steps.version.outputs.VERSION, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}